# Simplified Dockerfile for Raspberry Pi with network issues
# Assumes you've run pi-build.sh locally first
FROM node:22-bullseye-slim

# Install serve and pm2 globally
RUN npm install -g serve pm2

WORKDIR /app

# Copy backend files (including node_modules and dist from local build)
COPY package*.json ./
COPY dist ./dist
COPY views ./views
COPY public ./public
COPY node_modules ./node_modules

# Copy frontend build
COPY frontend/dist ./frontend-dist

# Create data directory 
RUN mkdir -p /app/data

# Create PM2 ecosystem file for running multiple processes
RUN cat > ecosystem.config.js << 'EOF'
module.exports = {
  apps: [
    {
      name: 'api-server',
      script: 'dist/web/api-server.js',
      env: {
        NODE_ENV: 'production',
        PORT: 3001
      }
    },
    {
      name: 'main-server',
      script: 'dist/server.js',
      env: {
        NODE_ENV: 'production'
      }
    },
    {
      name: 'frontend',
      script: 'serve',
      args: '-s frontend-dist -l 3000',
      env: {
        NODE_ENV: 'production'
      }
    }
  ]
};
EOF

# Expose ports
# 3000 - React frontend
# 3001 - API server
# 5540 - Matter protocol
EXPOSE 3000 3001 5540

# Health check for frontend
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1

# Start all services with PM2
CMD ["pm2-runtime", "start", "ecosystem.config.js"]